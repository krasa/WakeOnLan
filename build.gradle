plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'org.beryx.runtime' version '1.11.4'

}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
test {
    useJUnitPlatform()
}
javafx {
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics']
}
if(JavaVersion.current() == JavaVersion.VERSION_15){
    throw new RuntimeException("JDK 15 je rozbity, pouzij 14!")
}

def buildNumberFile = new File('buildNumber')
if (!buildNumberFile.exists()) {
    buildNumberFile.setText("0")
}
def buildNumber =  buildNumberFile.text
if (!buildNumber.isNumber()) {
    buildNumber="0"
}
buildNumber++
new File('buildNumber').setText(buildNumber)
version = '0.10.'+buildNumber

repositories {
    mavenCentral()
}

project.ext.buildDate = new Date()
dependencies {
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    implementation 'org.slf4j:slf4j-api:1.7.25'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // https://mvnrepository.com/artifact/com.hierynomus/sshj
    implementation group: 'com.hierynomus', name: 'sshj', version: '0.30.0'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
             
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

application {
    mainClassName = "krasa.wakeonlan.Launcher"
    applicationName = 'ProbouzecPC'
}

//https://github.com/beryx-gist/badass-runtime-example-javafx
runtime {
    options = ['--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        jvmArgs = ['-Dlogback.configurationFile=.conf/logback.xml']
        noConsole = false
    }
    jpackage {
        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        imageOptions = ["--icon", "src/main/resources/krasa/wakeonlan/icon.ico"]
        installerOptions += ['--resource-dir', "src/main/resources"]
        installerOptions += ['--vendor', 'Nimblsoft']
        installerOptions += ['--verbose']
        if(currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
            installerOptions += ['--win-menu-group', 'Probouzec PC']
        }
    }
    
//   
//    targetPlatform("win") {
//        jdkHome = 'C:\\Users\\i7\\.jdks\\openjdk-15.0.1'
//    }
}
def imageConf = "$buildDir/jpackage/$rootProject.name/conf"
          
tasks.jpackageImage.doLast  {        
     copy{
        from('conf')
         into(imageConf)
    }         
    copy {
        from('src/main/resources/logback.xml')
        into(imageConf)
    }
}