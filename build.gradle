plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
//    id 'edu.sc.seis.launch4j' version '2.4.9'
    id "org.beryx.jlink" version "2.22.3"

}

javafx {
    version = "13"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics']
}
jar {
    enabled = true
}

group = 'krasa.wakeonlan'
version = '0.8'
sourceCompatibility = '13'
targetCompatibility = '13'


repositories {
    mavenCentral()
}

project.ext.buildDate = new Date()
dependencies {
//    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    // https://mvnrepository.com/artifact/net.rgielen/javafx-weaver-spring-boot-starter
//    implementation group: 'net.rgielen', name: 'javafx-weaver-spring-boot-starter', version: '1.3.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
//    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.3'
//    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.3'


    implementation 'org.slf4j:slf4j-api:1.7.25'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // https://mvnrepository.com/artifact/com.hierynomus/sshj
    implementation group: 'com.hierynomus', name: 'sshj', version: '0.30.0'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
// https://mvnrepository.com/artifact/uk.org.lidalia/sysout-over-slf4j
    implementation group: 'uk.org.lidalia', name: 'sysout-over-slf4j', version: '1.0.2'

//    implementation 'org.springframework.boot:spring-boot-starter'
//    testImplementation('org.springframework.boot:spring-boot-starter-test') {
//        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
//    }
}
jar {
    manifest {
        attributes 'Implementation-Title': "ProbouzecPC",
                'Main-Class': 'krasa.wakeonlan.WakeOnLanApplication'
    }
}

test {
    useJUnitPlatform()
}


application {
    mainClassName = "krasa.wakeonlan.WakeOnLanApplication"
    applicationName = 'ProbouzecPC'
}

jlink {
    options = ['--strip-debug','--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'Probouzec PC'
        jvmArgs = ['-Dlogback.configurationFile=./logback.xml']

        mergedModule {
            additive = true
            uses 'ch.qos.logback.classic.spi.Configurator'

//        excludeRequires('java.security.jgss')
            excludeRequires('java.desktop')
            excludeProvides service: 'reactor.blockhound.integration.BlockHoundIntegration'
            excludeProvides servicePattern: 'org.apache.logging.log4j.*'
            excludeProvides service: 'javax.servlet.ServletContainerInitializer'
        }

        addExtraDependencies("javafx")
        forceMerge("com.google.gson")

        jpackage {
            installerType = 'msi'
            def currentOs = org.gradle.internal.os.OperatingSystem.current()
            installerOptions += ['--resource-dir', "src/main/resources"]
            installerOptions += ['--vendor', 'Nimblsoft']
            imageOptions = ["--icon", "src/main/resources/krasa/wakeonlan/icon.ico"]
            if (currentOs.windows) {
                installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
            }
        }
    }
}           
tasks.jlink.doLast {
    copy {
        from('src/main/resources/logback.xml')
        into("$buildDir/image/bin/")
    }
} 